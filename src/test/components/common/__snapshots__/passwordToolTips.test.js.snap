// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PasswordToolTips Component Test should render PasswordToolTips with all errors 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  & .pwdToolTipRow {
    margin: 0px 0px 10px 0px;
    opacity: 1 !important;
  }

  & .pwdToolTipRow:last-child {
    margin: 0px;
  }

  & #pwdCharactersNumErrorText {
    color: ",
          [Function],
          ";
  }

  & #pwdCharactersNumErrorIcon {
    margin-left: 30px;
  }

  & #pwdCharactersNumErrorIcon .fa-check-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdCharactersNumErrorIcon .fa-times-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdAlphaDigitErrorText {
    color: ",
          [Function],
          ";
  }

  & #pwdAlphaDigitErrorIcon {
    margin-left: 16px;
  }

  & #pwdAlphaDigitErrorIcon .fa-check-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdAlphaDigitErrorIcon .fa-times-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdTypeErrorText {
    color: ",
          [Function],
          ";
  }

  & #pwdTypeErrorIcon {
    margin-left: 53px;
  }

  & #pwdTypeErrorIcon .fa-check-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdTypeErrorIcon .fa-times-circle {
    display: ",
          [Function],
          ";
  }

  & i {
    font-size: 17px;
  }

  & i.fa-check-circle {
    color: green;
  }

  & i.fa-times-circle {
    color: red;
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  isPwdAlphaDigitInvalid={true}
  isPwdCharactersNumInvalid={true}
  isPwdTypeInvalid={true}
>
  <Bootstrap(Row)
    className="pwdToolTipRow justify-content-between"
    key="pwdCharactersNumErrorRow"
  >
    <span
      id="pwdCharactersNumErrorText"
    >
      Password must have 6-16 characters
    </span>
    <span
      id="pwdCharactersNumErrorIcon"
    >
      <i
        className="fa fa-check-circle"
      />
      <i
        className="fa fa-times-circle"
      />
    </span>
  </Bootstrap(Row)>
  <Bootstrap(Row)
    className="pwdToolTipRow justify-content-between"
    key="pwdAlphaDigitErrorRow"
  >
    <span
      id="pwdAlphaDigitErrorText"
    >
      At least one alphabet and one number
    </span>
    <span
      id="pwdAlphaDigitErrorIcon"
    >
      <i
        className="fa fa-check-circle"
      />
      <i
        className="fa fa-times-circle"
      />
    </span>
  </Bootstrap(Row)>
  <Bootstrap(Row)
    className="pwdToolTipRow justify-content-between"
    key="pwdTypeErrorRow"
  >
    <span
      id="pwdTypeErrorText"
    >
      Contains only 0-9, a-z, A-Z and _
    </span>
    <span
      id="pwdTypeErrorIcon"
    >
      <i
        className="fa fa-check-circle"
      />
      <i
        className="fa fa-times-circle"
      />
    </span>
  </Bootstrap(Row)>
</StyledComponent>
`;

exports[`PasswordToolTips Component Test should render PasswordToolTips without errors 1`] = `
<StyledComponent
  forwardedComponent={
    Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-bdVaJa",
        "isStatic": false,
        "rules": Array [
          "
  & .pwdToolTipRow {
    margin: 0px 0px 10px 0px;
    opacity: 1 !important;
  }

  & .pwdToolTipRow:last-child {
    margin: 0px;
  }

  & #pwdCharactersNumErrorText {
    color: ",
          [Function],
          ";
  }

  & #pwdCharactersNumErrorIcon {
    margin-left: 30px;
  }

  & #pwdCharactersNumErrorIcon .fa-check-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdCharactersNumErrorIcon .fa-times-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdAlphaDigitErrorText {
    color: ",
          [Function],
          ";
  }

  & #pwdAlphaDigitErrorIcon {
    margin-left: 16px;
  }

  & #pwdAlphaDigitErrorIcon .fa-check-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdAlphaDigitErrorIcon .fa-times-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdTypeErrorText {
    color: ",
          [Function],
          ";
  }

  & #pwdTypeErrorIcon {
    margin-left: 53px;
  }

  & #pwdTypeErrorIcon .fa-check-circle {
    display: ",
          [Function],
          ";
  }

  & #pwdTypeErrorIcon .fa-times-circle {
    display: ",
          [Function],
          ";
  }

  & i {
    font-size: 17px;
  }

  & i.fa-check-circle {
    color: green;
  }

  & i.fa-times-circle {
    color: red;
  }
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-bdVaJa",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    }
  }
  forwardedRef={null}
  isPwdAlphaDigitInvalid={false}
  isPwdCharactersNumInvalid={false}
  isPwdTypeInvalid={false}
>
  <Bootstrap(Row)
    className="pwdToolTipRow justify-content-between"
    key="pwdCharactersNumErrorRow"
  >
    <span
      id="pwdCharactersNumErrorText"
    >
      Password must have 6-16 characters
    </span>
    <span
      id="pwdCharactersNumErrorIcon"
    >
      <i
        className="fa fa-check-circle"
      />
      <i
        className="fa fa-times-circle"
      />
    </span>
  </Bootstrap(Row)>
  <Bootstrap(Row)
    className="pwdToolTipRow justify-content-between"
    key="pwdAlphaDigitErrorRow"
  >
    <span
      id="pwdAlphaDigitErrorText"
    >
      At least one alphabet and one number
    </span>
    <span
      id="pwdAlphaDigitErrorIcon"
    >
      <i
        className="fa fa-check-circle"
      />
      <i
        className="fa fa-times-circle"
      />
    </span>
  </Bootstrap(Row)>
  <Bootstrap(Row)
    className="pwdToolTipRow justify-content-between"
    key="pwdTypeErrorRow"
  >
    <span
      id="pwdTypeErrorText"
    >
      Contains only 0-9, a-z, A-Z and _
    </span>
    <span
      id="pwdTypeErrorIcon"
    >
      <i
        className="fa fa-check-circle"
      />
      <i
        className="fa fa-times-circle"
      />
    </span>
  </Bootstrap(Row)>
</StyledComponent>
`;
